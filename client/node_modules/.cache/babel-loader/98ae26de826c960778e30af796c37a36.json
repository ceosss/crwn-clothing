{"ast":null,"code":"var _jsxFileName = \"E:\\\\Web Dev Prac\\\\React\\\\crwn-clothing\\\\src\\\\pages\\\\shoppage\\\\ShopPage.component.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { updateCollections } from \"./../../redux/shop/shop.actions\";\nimport CollectionOverview from \"./../../components/collection-overview/collection-overview.component\";\nimport Collection from \"./../collection/collection.component\";\nimport WithSpinner from \"./../../components/with-spinner/with-spinner.component\";\nimport { firestore, convertCollectionsSnapshopToMap } from \"./../../firebase/firebase.utils\"; // import \"./ShopPage.styles.scss\";\n\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionWithSpinner = WithSpinner(Collection);\n\nconst ShopPage = ({ ...props\n}) => {\n  const [loading, setLoading] = useState(true); // unsubscribeFromSnapshot = null;\n\n  useEffect(() => {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection(\"collections\");\n    collectionRef.get().then(snapshot => {\n      const transformedCollection = convertCollectionsSnapshopToMap(snapshot.docs);\n      updateCollections(transformedCollection);\n      setLoading({\n        loading: false\n      });\n    });\n  }); // componentDidMount() {\n  //   const { updateCollections } = this.props;\n  //   const collectionRef = firestore.collection(\"collections\");\n  //   collectionRef.get().then(snapshot => {\n  //     const transformedCollection = convertCollectionsSnapshopToMap(\n  //       snapshot.docs\n  //     );\n  //     updateCollections(transformedCollection);\n  //     this.setState({ loading: false });\n  //   })\n  // }\n\n  const {\n    match\n  } = props;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shop-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: `${match.path}`,\n    render: props => /*#__PURE__*/React.createElement(CollectionOverviewWithSpinner, Object.assign({\n      isLoading: loading\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: `${match.path}/:collectionId`,\n    render: props => /*#__PURE__*/React.createElement(CollectionWithSpinner, Object.assign({\n      isLoading: loading\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst MapDispatchToProps = dispatch => {\n  return {\n    updateCollections: collection => dispatch(updateCollections(collection))\n  };\n};\n\nexport default connect(null, MapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["E:/Web Dev Prac/React/crwn-clothing/src/pages/shoppage/ShopPage.component.jsx"],"names":["React","useState","useEffect","Route","connect","updateCollections","CollectionOverview","Collection","WithSpinner","firestore","convertCollectionsSnapshopToMap","CollectionOverviewWithSpinner","CollectionWithSpinner","ShopPage","props","loading","setLoading","collectionRef","collection","get","then","snapshot","transformedCollection","docs","match","path","MapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,iBAAT,QAAkC,iCAAlC;AAEA,OAAOC,kBAAP,MAA+B,sEAA/B;AACA,OAAOC,UAAP,MAAuB,sCAAvB;AAEA,OAAOC,WAAP,MAAwB,wDAAxB;AAEA,SACEC,SADF,EAEEC,+BAFF,QAGO,iCAHP,C,CAKA;;AAEA,MAAMC,6BAA6B,GAAGH,WAAW,CAACF,kBAAD,CAAjD;AACA,MAAMM,qBAAqB,GAAGJ,WAAW,CAACD,UAAD,CAAzC;;AAEA,MAAMM,QAAQ,GAAG,CAAC,EAAC,GAAGC;AAAJ,CAAD,KAAgB;AAC/B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,IAAD,CAAtC,CAD+B,CAG/B;;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM;AAAEG,MAAAA;AAAF,QAAwB,KAAKS,KAAnC;AACA,UAAMG,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;AAEAD,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAA0BC,QAAD,IAAc;AACrC,YAAMC,qBAAqB,GAAGZ,+BAA+B,CAC3DW,QAAQ,CAACE,IADkD,CAA7D;AAGAlB,MAAAA,iBAAiB,CAACiB,qBAAD,CAAjB;AACAN,MAAAA,UAAU,CAAC;AAAED,QAAAA,OAAO,EAAE;AAAX,OAAD,CAAV;AACD,KAND;AAOD,GAXQ,CAAT,CAL+B,CAkB/B;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,QAAM;AAAES,IAAAA;AAAF,MAAYV,KAAlB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,IAAI,EAAG,GAAEU,KAAK,CAACC,IAAK,EAFtB;AAGE,IAAA,MAAM,EAAGX,KAAD,iBACN,oBAAC,6BAAD;AAA+B,MAAA,SAAS,EAAEC;AAA1C,OAAuDD,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAQE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAG,GAAEU,KAAK,CAACC,IAAK,gBADtB;AAEE,IAAA,MAAM,EAAGX,KAAD,iBACN,oBAAC,qBAAD;AAAuB,MAAA,SAAS,EAAEC;AAAlC,OAA+CD,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF;AAiBD,CAjDD;;AAmDA,MAAMY,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLtB,IAAAA,iBAAiB,EAAGa,UAAD,IAAgBS,QAAQ,CAACtB,iBAAiB,CAACa,UAAD,CAAlB;AADtC,GAAP;AAGD,CAJD;;AAMA,eAAed,OAAO,CAAC,IAAD,EAAOsB,kBAAP,CAAP,CAAkCb,QAAlC,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Route } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { updateCollections } from \"./../../redux/shop/shop.actions\";\r\n\r\nimport CollectionOverview from \"./../../components/collection-overview/collection-overview.component\";\r\nimport Collection from \"./../collection/collection.component\";\r\n\r\nimport WithSpinner from \"./../../components/with-spinner/with-spinner.component\";\r\n\r\nimport {\r\n  firestore,\r\n  convertCollectionsSnapshopToMap,\r\n} from \"./../../firebase/firebase.utils\";\r\n\r\n// import \"./ShopPage.styles.scss\";\r\n\r\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\r\nconst CollectionWithSpinner = WithSpinner(Collection);\r\n\r\nconst ShopPage = ({...props}) => {\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // unsubscribeFromSnapshot = null;\r\n\r\n  useEffect(() => {\r\n    const { updateCollections } = this.props;\r\n    const collectionRef = firestore.collection(\"collections\");\r\n\r\n    collectionRef.get().then((snapshot) => {\r\n      const transformedCollection = convertCollectionsSnapshopToMap(\r\n        snapshot.docs\r\n      );\r\n      updateCollections(transformedCollection);\r\n      setLoading({ loading: false });\r\n    });\r\n  });\r\n\r\n  // componentDidMount() {\r\n  //   const { updateCollections } = this.props;\r\n  //   const collectionRef = firestore.collection(\"collections\");\r\n\r\n  //   collectionRef.get().then(snapshot => {\r\n  //     const transformedCollection = convertCollectionsSnapshopToMap(\r\n  //       snapshot.docs\r\n  //     );\r\n  //     updateCollections(transformedCollection);\r\n  //     this.setState({ loading: false });\r\n  //   })\r\n  // }\r\n  const { match } = props;\r\n\r\n  return (\r\n    <div className=\"shop-page\">\r\n      <Route\r\n        exact\r\n        path={`${match.path}`}\r\n        render={(props) => (\r\n          <CollectionOverviewWithSpinner isLoading={loading} {...props} />\r\n        )}\r\n      />\r\n      <Route\r\n        path={`${match.path}/:collectionId`}\r\n        render={(props) => (\r\n          <CollectionWithSpinner isLoading={loading} {...props} />\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst MapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateCollections: (collection) => dispatch(updateCollections(collection)),\r\n  };\r\n};\r\n\r\nexport default connect(null, MapDispatchToProps)(ShopPage);\r\n"]},"metadata":{},"sourceType":"module"}