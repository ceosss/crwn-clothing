{"ast":null,"code":"import CartActionTypes from \"./cart.types\";\nimport { addItemToCart } from \"./cart.utils\";\nconst INITIAL_STATE = {\n  hidden: true,\n  items: []\n};\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CartActionTypes.TOGGLE_CART_HIDDEN:\n      return { ...state,\n        hidden: !state.hidden\n      };\n\n    case CartActionTypes.ADD_ITEM:\n      return { ...state,\n        items: addItemToCart(state.items, action.payload)\n      };\n\n    case CartActionTypes.REMOVE_ITEM:\n      return { ...state\n      };\n\n    case CartActionTypes.CLEAR_ITEM_FROM_CART:\n      return { ...state,\n        items: state.items.filter(item => item.id !== action.payload.id)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["E:/Web Dev Prac/React/crwn-clothing/src/redux/cart/cart.reducer.js"],"names":["CartActionTypes","addItemToCart","INITIAL_STATE","hidden","items","cartReducer","state","action","type","TOGGLE_CART_HIDDEN","ADD_ITEM","payload","REMOVE_ITEM","CLEAR_ITEM_FROM_CART","filter","item","id"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAASC,aAAT,QAA8B,cAA9B;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,MAAM,EAAE,IADY;AAEpBC,EAAAA,KAAK,EAAE;AAFa,CAAtB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,aAAT,EAAwBK,MAAxB,KAAmC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,eAAe,CAACS,kBAArB;AACE,aAAO,EACL,GAAGH,KADE;AAELH,QAAAA,MAAM,EAAE,CAACG,KAAK,CAACH;AAFV,OAAP;;AAIF,SAAKH,eAAe,CAACU,QAArB;AACE,aAAO,EACL,GAAGJ,KADE;AAELF,QAAAA,KAAK,EAAEH,aAAa,CAACK,KAAK,CAACF,KAAP,EAAcG,MAAM,CAACI,OAArB;AAFf,OAAP;;AAIF,SAAKX,eAAe,CAACY,WAArB;AACE,aAAO,EACL,GAAGN;AADE,OAAP;;AAIF,SAAKN,eAAe,CAACa,oBAArB;AACE,aAAO,EACL,GAAGP,KADE;AAELF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYU,MAAZ,CAAoBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYT,MAAM,CAACI,OAAP,CAAeK,EAAxD;AAFF,OAAP;;AAIF;AACE,aAAOV,KAAP;AAtBJ;AAwBD,CAzBD;;AA2BA,eAAeD,WAAf","sourcesContent":["import CartActionTypes from \"./cart.types\";\r\nimport { addItemToCart } from \"./cart.utils\";\r\n\r\nconst INITIAL_STATE = {\r\n  hidden: true,\r\n  items: [],\r\n};\r\n\r\nconst cartReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case CartActionTypes.TOGGLE_CART_HIDDEN:\r\n      return {\r\n        ...state,\r\n        hidden: !state.hidden,\r\n      };\r\n    case CartActionTypes.ADD_ITEM:\r\n      return {\r\n        ...state,\r\n        items: addItemToCart(state.items, action.payload),\r\n      };\r\n    case CartActionTypes.REMOVE_ITEM:\r\n      return {\r\n        ...state,\r\n        \r\n      }\r\n    case CartActionTypes.CLEAR_ITEM_FROM_CART:\r\n      return {\r\n        ...state,\r\n        items: state.items.filter((item) => item.id !== action.payload.id),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default cartReducer;\r\n"]},"metadata":{},"sourceType":"module"}