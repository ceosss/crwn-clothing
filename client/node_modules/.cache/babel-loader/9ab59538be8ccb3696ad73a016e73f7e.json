{"ast":null,"code":"var _jsxFileName = \"E:\\\\Web Dev Prac\\\\React\\\\crwn-clothing\\\\client\\\\src\\\\components\\\\error-boundary\\\\error-boundary.component.jsx\";\nimport React from \"react\";\nimport { error } from './error-boundary.styles';\n\nclass ErrorBoundary extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      hasErrored: false\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    return {\n      hasErrored: true\n    };\n  }\n\n  componentDidCatch(error, info) {}\n\n  render() {\n    if (this.state.hasErrored) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 14\n        }\n      }, \"Something went wrong\");\n    } else {\n      return this.props.children;\n    }\n  }\n\n}\n\nexport default ErrorBoundary;","map":{"version":3,"sources":["E:/Web Dev Prac/React/crwn-clothing/client/src/components/error-boundary/error-boundary.component.jsx"],"names":["React","error","ErrorBoundary","Component","constructor","state","hasErrored","getDerivedStateFromError","componentDidCatch","info","render","props","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAAQC,KAAR,QAAoB,yBAApB;;AAEA,MAAMC,aAAN,SAA4BF,KAAK,CAACG,SAAlC,CAA4C;AAC1CC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAAb;AACD;;AAED,SAAOC,wBAAP,CAAgCN,KAAhC,EAAuC;AACrC,WAAO;AAAEK,MAAAA,UAAU,EAAE;AAAd,KAAP;AACD;;AAEDE,EAAAA,iBAAiB,CAACP,KAAD,EAAQQ,IAAR,EAAc,CAAE;;AACjCC,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKL,KAAL,CAAWC,UAAf,EAA2B;AACzB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAP;AACD,KAFD,MAEO;AACL,aAAO,KAAKK,KAAL,CAAWC,QAAlB;AACD;AACF;;AAjByC;;AAoB5C,eAAeV,aAAf","sourcesContent":["import React from \"react\";\r\n\r\nimport {error} from './error-boundary.styles'\r\n\r\nclass ErrorBoundary extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { hasErrored: false };\r\n  }\r\n\r\n  static getDerivedStateFromError(error) {\r\n    return { hasErrored: true };\r\n  }\r\n\r\n  componentDidCatch(error, info) {}\r\n  render() {\r\n    if (this.state.hasErrored) {\r\n      return <div>Something went wrong</div>;\r\n    } else {\r\n      return this.props.children;\r\n    }\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n"]},"metadata":{},"sourceType":"module"}